import { TYPES } from "../actions/ShoppingActions";



export const shoppingInitialState = {       //el estado inicial es la base de datos de productos, en un objeto, y el carrito en otro objeto vacio
    products: [],

    cart: [ ],
}

export function shoppingReducer (state , action) {
    switch (action.type) {
        case TYPES.READ_STATE : {
            return {
                ...state,
                products: action.payload[0],
                cart: action.payload[1]
            }
        }
        case TYPES.ADD_TO_CART : {
            let newItem = state.products.find( (product) => product.id === action.payload);

            let itemInCart = state.cart.find ( (item) => item.id ===newItem.id);        //era state.cart, no state.product OJO
            console.log(newItem);
            
            return itemInCart
            ? {
                ...state,
                cart: state.cart.map((item) =>
                    item.id === newItem.id
                    ? { ...item , quantity: item.quantity + 1}
                    : item
                    ),
                }
            :{
                ...state,       //guardar una copia del estado
                cart : [...state.cart , {...newItem, quantity: 1}],
            
        }; 
        
    }
        case TYPES.REMOVE_ONE_PRODUCT: {
            let itemToDelete = state.cart.find((item) => item.id === action.payload) ;

            return itemToDelete.quantity > 1
            ? {
                ...state,
                cart: state.cart.map((item) => item.id === action.payload
                ? { ...item, quantity: item.quantity - 1}
                : item
                ),
            }
            : {
                ...state,
                cart: state.cart.filter(item => item.id !== action.payload)
            };
        }
        case TYPES.REMOVE_ALL_PRODUCTS : {
            return {
                ...state,
                cart: state.cart.filter(item => item.id !== action.payload)
            }
        }
        case TYPES.CLEAR_CART : {
            return shoppingInitialState;
        }
        default:            
        return state;
    } 
}

